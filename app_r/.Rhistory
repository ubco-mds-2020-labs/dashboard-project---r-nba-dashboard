aes(x = Season, y = Points_per_game,  fill = Points_type) +
geom_bar(position="stack", stat="identity") +
ylab("Points") +
ggtitle('Average Points by Season') +
scale_fill_manual("Points_type", values = c('2 Point' = 'steelblue2', '3 Point' = 'darkorange', 'Free throws' = 'coral2')) +
scale_x_continuous(breaks = chart_1$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_1, Player == xcol & Stage == ycol)) +
aes(x = Season, y = Points_per_game,  fill = Points_type) +
geom_bar(position="stack", stat="identity") +
ylab("Points") +
ggtitle('Average Points by Season') +
scale_fill_manual("Points_type", values = c('2 Point' = 'steelblue2', '3 Point' = 'darkorange', 'Free throws' = 'coral2')) +
scale_x_continuous(breaks = chart_1_df$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_1, Player == xcol & Stage == ycol)) +
aes(x = Season, y = Points_per_game,  fill = Points_type) +
geom_bar(position="stack", stat="identity") +
ylab("Points") +
ggtitle('Average Points by Season') +
scale_fill_manual("Points_type", values = c('2 Point' = 'steelblue2', '3 Point' = 'darkorange', 'Free throws' = 'coral2')) +
scale_x_continuous(breaks = df_chart_1$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_2,Player == xcol & Stage == ycol)) +
aes(x = Season, y = Assists_per_game) +
stat_summary(fun = mean, geom = 'line', size=1, color='steelblue2') +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = chart_2$Season)
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_2,Player == xcol & Stage == ycol)) +
aes(x = Season, y = Assists_per_game) +
stat_summary(fun = mean, geom = 'line', size=1, color='steelblue2') +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = df_chart_2$Season)
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_2,Player == xcol & Stage == ycol)) +
aes(x = Season, y = Assists_per_game) +
stat_summary(fun = mean, geom = 'line', size=1, color='steelblue2') +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = df_chart_2$Season)
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
#return(ggplotly(chart))
return(chart)
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_2,Player == xcol & Stage == ycol)) +
aes(x = Season, y = Assists_per_game) +
stat_summary(fun = mean, geom = 'line', size=1, color='steelblue2') +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = df_chart_2$Season)+
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_3, Player == xcol & Stage == ycol)) +
aes(x = Season, y = Rebounds_per_game,  fill = Rebound_type) +
geom_bar(position="stack", stat="identity") +
ylab("Rebounds") +
ggtitle('Average Rebounds by Season') +
scale_fill_manual("Rebound_type", values = c('Defensive Rebounds' = 'steelblue2', 'Offensive Rebounds' = 'darkorange')) +
scale_x_continuous(breaks = df_chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_4,Player == xcol & Stage == ycol)) +
aes(x = Season, y = per_game, color = Blocks.Steals) +
stat_summary(fun = mean, geom = 'line', size=1) +
ylab("Count") +
ggtitle('Average Blocks & Steals by Season') +
scale_color_manual("Blocks.Steals", values = c('Blocks' = 'steelblue2', 'Steals' = 'darkorange')) +
scale_x_continuous(breaks = df_chart_4$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_5,Player == xcol & Stage == ycol)) +
aes(x = Season, y = per_game, color = Turnovers.Fouls) +
stat_summary(fun = mean, geom = 'line', size=1) +
ylab("Count") +
ggtitle('Average Turnovers & Fouls by Season') +
scale_color_manual("Turnovers.Fouls", values = c('Fouls' = 'steelblue2', 'Turnovers' = 'darkorange')) +
# maximum value for turnovers or fouls in our dataset is 6.25
ylim(0, 6.25) +
scale_x_continuous(breaks = df_chart_5$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_11,Player == xcol & Stage == ycol)) +
aes(x = Season, y = per_game, color = X2PT_3PT_eFG) +
stat_summary(fun = mean, geom = 'line', size=1.0) +
ylab("Shooting Percentage") +
ggtitle('Average Shooting Percentages by Season') +
scale_color_manual("X2PT_3PT_eFG", values = c('2PT_%' = 'steelblue2', '3PT_%' = 'darkorange', 'eFG_%' = 'darkred')) +
scale_x_continuous(breaks = df_chart_11$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart) %>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_12, Player == xcol & Stage == ycol)) +
aes(x = Season, y = True.shooting.percentage) +
geom_bar(stat="identity", fill="steelblue2") +
ylab("True Shooting Percentage") +
ggtitle('True Shooting Percentage by Season') +
scale_x_continuous(breaks = df_chart_12$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_13, Player == xcol & Stage == ycol)) +
aes(x = Season, y = Game.Score) +
geom_bar(stat="identity", fill="steelblue2") +
ylab("Game Score") +
ggtitle('Player Productivity by Season') +
scale_x_continuous(breaks = df_chart_13$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="none",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
chart <- ggplot(subset(df_chart_13, Player == xcol)) +
aes(x = Minutes.Played, y = Game.Score) +
geom_point(aes(colour = Stage), size=1.8) +
ylab("Game Score") +
xlab("Minutes Played") +
ggtitle('Player Productivity by Minutes Played') +
scale_color_manual("Stage", values = c('Playoffs' = 'steelblue2', 'Regular_Season' = 'darkorange')) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_line(colour = 'lightgrey'),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart)%>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
a <- subset(df_chart_13, Player == xcol)
a <- subset(df_chart_13, Player == xcol)
a
trunc(3.43, 0)
xcol <- "Kobe Bryant"
a <- subset(df_chart_13, Player == xcol)
min_min <- trunc(min(a$Minutes.Played) - 1,0)
max_min <- trunc(max(a$Minutes.Played) +1, 0)
min_min
max_min
xcol <- "Kobe Bryant"
a <- subset(df_chart_13, Player == xcol)
min_min <- trunc(min(a$Minutes.Played),0)
max_min <- trunc(max(a$Minutes.Played) +1, 0)
min_min
max_min
xcol <- "Kobe Bryant"
a <- subset(df_chart_13, Player == xcol)
min_min <- trunc(min(a$Minutes.Played),0)
max_min <- trunc(max(a$Minutes.Played) +1, 0)
min_range <- seq(min_min, max_min, 1)
min_min
max_min
min_range
plot_R <- function(xcol, ycol){
sub_chart = subset(df_chart_13, Player == xcol)
min_min <- trunc(min(sub_chart$Minutes.Played),0)
max_min <- trunc(max(sub_chart$Minutes.Played) + 1,0)
min_range <- seq(min_min, max_min, 1)
chart <- ggplot(sub_chart) +
aes(x = Minutes.Played, y = Game.Score) +
geom_point(aes(colour = Stage), size=1.8) +
ylab("Game Score") +
xlab("Minutes Played") +
ggtitle('Player Productivity by Minutes Played') +
scale_color_manual("Stage", values = c('Playoffs' = 'steelblue2', 'Regular_Season' = 'darkorange')) +
scale_x_continuous(breaks = min_range) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_line(colour = 'lightgrey'),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart)%>% layout(legend = list(orientation = 'h', y= -0.2)))
}
xcol <- "Kobe Bryant"
a <- subset(df_chart_13, Player == xcol)
min_min <- trunc(min(a$Minutes.Played),0)
max_min <- trunc(max(a$Minutes.Played) +1, 0)
min_range <- seq(min_min, max_min, 1)
min_min
max_min
min_range
plot_R <- function(xcol, ycol){
sub_chart = subset(df_chart_13, Player == xcol)
min_min <- trunc(min(sub_chart$Minutes.Played),0)
max_min <- trunc(max(sub_chart$Minutes.Played) + 1,0)
min_range <- seq(min_min, max_min, 1)
chart <- ggplot(sub_chart) +
aes(x = Minutes.Played, y = Game.Score) +
geom_point(aes(colour = Stage), size=1.8) +
ylab("Game Score") +
xlab("Minutes Played") +
ggtitle('Player Productivity by Minutes Played') +
scale_color_manual("Stage", values = c('Playoffs' = 'steelblue2', 'Regular_Season' = 'darkorange')) +
scale_x_continuous(breaks = min_range) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_line(colour = 'lightgrey'),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart)%>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol, ycol){
sub_chart = subset(df_chart_13, Player == xcol)
min_min <- trunc(min(sub_chart$Minutes.Played),0)
max_min <- trunc(max(sub_chart$Minutes.Played) + 1,0)
min_range <- seq(min_min, max_min, 1)
chart <- ggplot(sub_chart) +
aes(x = Minutes.Played, y = Game.Score) +
geom_point(aes(colour = Stage), size=1.8) +
ylab("Game Score") +
xlab("Minutes Played") +
ggtitle('Player Productivity by Minutes Played') +
scale_color_manual("Stage", values = c('Playoffs' = 'steelblue2', 'Regular_Season' = 'darkorange')) +
scale_x_continuous(breaks = min_range) +
theme(
axis.text.x = element_text(angle = 0),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_line(colour = 'lightgrey'),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart)%>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kobe Bryant"
y = "Regular_Season"
plot_R(x,y)
x = "Kevin Durant"
y = "Regular_Season"
plot_R(x,y)
plot_R <- function(xcol){
sub_chart = subset(df_chart_13, Player == xcol)
min_min <- trunc(min(sub_chart$Minutes.Played),0)
max_min <- trunc(max(sub_chart$Minutes.Played) + 1,0)
min_range <- seq(min_min, max_min, 1)
chart <- ggplot(sub_chart) +
aes(x = Minutes.Played, y = Game.Score) +
geom_point(aes(colour = Stage), size=1.8) +
ylab("Game Score") +
xlab("Minutes Played") +
ggtitle('Player Productivity by Minutes Played') +
scale_color_manual("Stage", values = c('Playoffs' = 'steelblue2', 'Regular_Season' = 'darkorange')) +
scale_x_continuous(breaks = min_range) +
theme(
axis.text.x = element_text(angle = 0),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_line(colour = 'lightgrey'),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
return(ggplotly(chart)%>% layout(legend = list(orientation = 'h', y= -0.2)))
}
x = "Kevin Durant"
#y = "Regular_Season"
plot_R(x)
