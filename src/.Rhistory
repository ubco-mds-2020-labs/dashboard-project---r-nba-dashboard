)
ggplot(subset(chart_4,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Blocks.Steals) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Blocks & Steals by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
ggplot(subset(chart_5,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Turnovers.Fouls) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Turnovers and Fouls by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
ggplot(subset(chart_2,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Assists_per_game) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
ggplot(subset(chart_2,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Assists_per_game, colour = 'blue') +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
ggplot(subset(chart_3,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Rebounds_per_game,  fill = Rebound_type) +
stat_summary(fun = mean, position = 'stack', geom = 'bar') +
ylab("Rebounds") +
ggtitle('Average Rebounds by Season') +
#scale_fill_manual("Points_type", values = c('Defensive Rebounds' = 'steelblue2', 'Offensive Rebounds' = 'darkorange')) +
scale_x_continuous(breaks = chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
plot(cars)
x <- 1:6
y <- c(3.5, 4.7, 5.8, 4.9, 4.5, 4.6)
h <- 1.05
x0 <- 3.7
g0.lm <- lm(y ~ 1, weights = dnorm(x - x0, sd = h))
coef(g0.lm) # estimate of g(x0)
# local constant
x0 <- 3.7
g0.lm <- lm(y ~ 1, weights = dnorm(x - x0, sd = h))
coef(g0.lm) # estimate of g(x0)
# local linear
g0.lm <- lm(y ~ I(x - x0), weights = dnorm(x - x0, sd = h))
coef(g0.lm)[1] # local linear estimate of g(x0)
# local quadratic
g0.lm <- lm(y ˜ I(x - x0) + I((x-x0)ˆ2), weights = dnorm(x - x0, sd = coef(g0.lm)[1] # local quadratic estimate of g(x0)
# local quadratic
g0.lm <- lm(y ~ I(x - x0) + I((x-x0)^2), weights = dnorm(x - x0, sd = coef(g0.lm)[1] # local quadratic estimate of g(x0)
# local quadratic
g0.lm <- lm(y ~ I(x - x0) + I((x-x0)^2), weights = dnorm(x - x0, sd = coef(g0.lm)[1]) # local quadratic estimate of g(x0)
# local quadratic
g0.lm <- lm(y ~ I(x - x0) + I((x-x0)^2), weights = dnorm(x - x0, sd = coef(g0.lm)[1])) # local quadratic estimate of g(x0)
# local quadratic
g0.lm <- lm(y ~ I(x - x0) + I((x-x0)^2), weights = dnorm(x - x0, sd = coef(g0.lm)[1])) # local quadratic estimate of g(x0)
g0.lm
# local constant
x0 <- seq(1.25, 5.75, 0.25)
m <- length(x0)
y0 <- numeric(m)
for (i in 1:m) {
g0.lm <- lm(y ~ 1, weights = dnorm(x - x0[i], sd = h))
y0[i] <- coef(g0.lm) # estimate of g(x0)
}
# local linear
m <- length(x0)
y1 <- numeric(m)
for (i in 1:m) {
g0.lm <- lm(y ~ I(x - x0[i]),
weights = dnorm(x - x0[i], sd = h))
y1[i] <- coef(g0.lm)[1] # local linear estimate of g(x0)
}
plot(x, y)
lines(x0, y0)
lines(x0, y1, col=2)
lines(x0, y2, col=3)
# local quadratic
m <- length(x0)
y2 <- numeric(m)
for (i in 1:m) {
g0.lm <- lm(y ~ I(x - x0[i]) + I((x-x0[i])ˆ2),
# local quadratic
m <- length(x0)
y2 <- numeric(m)
for (i in 1:m) {
g0.lm <- lm(y ~ I(x - x0[i]) + I((x-x0[i])^2),
weights = dnorm(x - x0[i], sd = h))
y2[i] <- coef(g0.lm)[1] # local quadratic estimate of g(x0)
}
plot(x, y)
lines(x0, y0)
lines(x0, y1, col=2)
lines(x0, y2, col=3)
library(DAAG)
library(DAAG)
x <- ironslag$magnetic
y <- ironslag$chemical
library(KernSmooth)
h <- dpill(x, y)
faithful.l0 <- locpoly(x, y, degree = 0, bandwidth = h)
faithful.l1 <- locpoly(x, y, degree = 1, bandwidth = h)
faithful.l2 <- locpoly(x, y, degree = 2, bandwidth = h)
plot(x, y, col="grey")
lines(faithful.l0)
lines(faithful.l1, col=2, lty=2)
lines(faithful.l2, col=3)
set.seed(36360)
g <- function(x) exp^(sin(6*x))
n <- 50; sigma = 0.25
x <- runif(n, max = 1)
y <- g(x) + rnorm(n, sd = sigma)
set.seed(36360)
g <- function(x) exp(sin(6*x))
n <- 50; sigma = 0.25
x <- runif(n, max = 1)
y <- g(x) + rnorm(n, sd = sigma)
plot(x, y)
h <- 0.1
sim.l0 <- locpoly(x, y, degree = 0, bandwidth = h)
sim.l1 <- locpoly(x, y, degree = 1, bandwidth = h)
sim.l2 <- locpoly(x, y, degree = 2, bandwidth = h)
lines(sim.l0)
plot(x, y)
h <- 0.1
sim.l0 <- locpoly(x, y, degree = 0, bandwidth = h)
sim.l1 <- locpoly(x, y, degree = 1, bandwidth = h)
sim.l2 <- locpoly(x, y, degree = 2, bandwidth = h)
lines(sim.l0)
lines(sim.l1, col=2, lty=2)
lines(sim.l2, col=3)
curve(g(x), 0, 2, add = TRUE, col = 4)
$\beta B$
geophones
library(DAAG)
geophones
library(DAAG)
geophones
par(mar=c(4, 4, 1, 1))
plot(thickness~distance, data = geophones)
library(splines) #
phones.lm <- lm(thickness~bs(distance, knots=seq(25, 65, 75),
Boundary.knots=c(0, 100),
degree=1,intercept=TRUE)-1, data=geophones)
x.grid <- seq(0,100,length=401)
y.grid <- predict(phones.lm, newdata=data.frame(distance=x.grid) )
par(mar=c(4, 3, .1, .1))
plot(geophones)
lines(y.grid~x.grid, xlab="distance")
library(splines) #
phones.lm <- lm(thickness~bs(distance, knots=seq(25, 65, 75),
Boundary.knots=c(0, 100),
degree=1,intercept=TRUE)-1, data=geophones)
x.grid <- seq(0,100,length=401)
y.grid <- predict(phones.lm, newdata=data.frame(distance=x.grid) )
par(mar=c(4, 3, .1, .1))
plot(geophones)
lines(y.grid~x.grid, xlab="distance")
y.grid <- predict(phones.lm, newdata= data.frame(distance=x.grid),
interval="confidence")
par(mar=c(4, 3, .1, .1))
plot(geophones)
lines(y.grid[,1] ~x.grid)
lines(y.grid[,2]~x.grid, col=2, lty=2, lwd=2)
lines(y.grid[,3] ~x.grid, col=2, lty=2, lwd=2)
library(DAAG)
geophones
par(mar=c(4, 4, 1, 1))
plot(thickness~distance, data = geophones)
library(splines) #
phones.lm <- lm(thickness~bs(distance, knots=c(25, 45, 65, 75, 78),
Boundary.knots=c(0, 100),
degree=3,intercept=TRUE)-1, data=geophones)
x.grid <- seq(0,100,length=401)
y.grid <- predict(phones.lm, newdata=data.frame(distance=x.grid) )
par(mar=c(4, 3, .1, .1))
plot(geophones)
lines(y.grid~x.grid, xlab="distance")
y.grid <- predict(phones.lm, newdata= data.frame(distance=x.grid),
interval="confidence")
par(mar=c(4, 3, .1, .1))
plot(geophones)
lines(y.grid[,1] ~x.grid)
lines(y.grid[,2]~x.grid, col=2, lty=2, lwd=2)
lines(y.grid[,3] ~x.grid, col=2, lty=2, lwd=2)
library(ggplot2)
metrics <- read.csv('../data/r_dashboard_csv/metrics.csv')
chart_1 <- read.csv('../data/r_dashboard_csv/df_chart_1.csv')
chart_2 <- read.csv('../data/r_dashboard_csv/df_chart_2.csv')
chart_3 <- read.csv('../data/r_dashboard_csv/df_chart_3.csv')
chart_4 <- read.csv('../data/r_dashboard_csv/df_chart_4.csv')
chart_5 <- read.csv('../data/r_dashboard_csv/df_chart_5.csv')
chart_11 <- read.csv('../data/r_dashboard_csv/df_chart_11.csv')
chart_12 <- read.csv('../data/r_dashboard_csv/df_chart_12.csv')
chart_13 <- read.csv('../data/r_dashboard_csv/df_chart_13.csv')
chart_1
ggplot(subset(chart_1,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Points_per_game,  fill = Points_type) +
stat_summary(fun = mean, position = 'stack', geom = 'bar') +
# xlim(1999, 2012) +
ylim(0, 40) +
ylab("Points") +
ggtitle('Average Game Points by Season') +
#scale_fill_manual("Points_type", values = c('2 Point' = 'steelblue2', '3 Point' = 'darkorange', 'Free throws' = 'coral2')) +
scale_x_continuous(breaks = chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
chart_2
ggplot(subset(chart_2,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Assists_per_game, colour = 'blue') +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
chart_3
ggplot(subset(chart_3,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Rebounds_per_game,  fill = Rebound_type) +
stat_summary(fun = mean, position = 'stack', geom = 'bar') +
ylab("Rebounds") +
ggtitle('Average Rebounds by Season') +
#scale_fill_manual("Points_type", values = c('Defensive Rebounds' = 'steelblue2', 'Offensive Rebounds' = 'darkorange')) +
scale_x_continuous(breaks = chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
ggplot(subset(chart_4,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Blocks.Steals) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Blocks & Steals by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
chart_5
ggplot(subset(chart_5,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Turnovers.Fouls) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Turnovers and Fouls by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
library(ggplot2)
metrics <- read.csv('../data/r_dashboard_csv/metrics.csv')
chart_1 <- read.csv('../data/r_dashboard_csv/df_chart_1.csv')
chart_2 <- read.csv('../data/r_dashboard_csv/df_chart_2.csv')
chart_3 <- read.csv('../data/r_dashboard_csv/df_chart_3.csv')
chart_4 <- read.csv('../data/r_dashboard_csv/df_chart_4.csv')
chart_5 <- read.csv('../data/r_dashboard_csv/df_chart_5.csv')
chart_11 <- read.csv('../data/r_dashboard_csv/df_chart_11.csv')
chart_12 <- read.csv('../data/r_dashboard_csv/df_chart_12.csv')
chart_13 <- read.csv('../data/r_dashboard_csv/df_chart_13.csv')
chart_1
ggplot(subset(chart_1,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Points_per_game,  fill = Points_type) +
stat_summary(fun = mean, position = 'stack', geom = 'bar') +
# xlim(1999, 2012) +
ylim(0, 40) +
ylab("Points") +
ggtitle('Average Game Points by Season') +
#scale_fill_manual("Points_type", values = c('2 Point' = 'steelblue2', '3 Point' = 'darkorange', 'Free throws' = 'coral2')) +
scale_x_continuous(breaks = chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
chart_2
ggplot(subset(chart_2,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Assists_per_game, colour = 'blue') +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Assists") +
ggtitle('Average Assists by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
chart_3
ggplot(subset(chart_3,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = Rebounds_per_game,  fill = Rebound_type) +
stat_summary(fun = mean, position = 'stack', geom = 'bar') +
ylab("Rebounds") +
ggtitle('Average Rebounds by Season') +
#scale_fill_manual("Points_type", values = c('Defensive Rebounds' = 'steelblue2', 'Offensive Rebounds' = 'darkorange')) +
scale_x_continuous(breaks = chart_3$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(vjust=-0.5), axis.title.y=element_text(vjust=0.1)
)
ggplot(subset(chart_4,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Blocks.Steals) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Blocks & Steals by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
chart_5
ggplot(subset(chart_5,Player == 'Kobe Bryant' & Stage == 'Regular_Season')) +
aes(x = Season, y = per_game, colour = Turnovers.Fouls) +
stat_summary(fun = mean, geom = 'line', size =2) +
ylab("Count") +
ggtitle('Average Turnovers and Fouls by Season') +
scale_x_continuous(breaks = chart_2$Season) +
theme(
axis.text.x = element_text(angle = 90),
legend.position="bottom",
legend.title=element_blank(),
legend.key = element_rect(fill='white'),
plot.title = element_text(hjust = 0.5),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(colour = 'lightgrey'),
panel.grid.minor.y=element_blank(),
panel.background=element_rect(fill="white"),
axis.line = element_line(colour = 'black'),
axis.title.x = element_text(face = 'bold', vjust=-0.5), axis.title.y=element_text(vjust=0.1)
) +
guides(size = 'none', colour = 'legend')
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/test.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
#metrics <- read.csv('../data/r_dashboard_csv/metrics.csv')
chart_1 <- read.csv('../data/r_dashboard_csv/df_chart_1.csv')
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/test.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r2.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/test.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/test.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
setwd("~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src")
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
source('~/OneDrive/UBC_MDS_GIT/dashboard-project---r-nba-dashboard/src/app_r.R', echo=TRUE)
